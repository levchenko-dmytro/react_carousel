{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_ref","images","step","frameSize","itemWidth","animationDuration","infinite","_useState","useState","_useState2","_slicedToArray","slide","setSlide","disabledPrev","disabledNext","length","_jsxs","className","style","width","concat","transition","children","_jsx","map","image","transform","src","alt","String","indexOf","type","onClick","Math","max","disabled","min","App","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","state","setStep","event","setState","target","value","setFrameSize","setImageWidth","setAnimationDuration","setInfinite","checked","_createClass","key","_this$state","this","htmlFor","id","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56d06fa2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [slide, setSlide] = useState(0);\n  const slideNext = () => {\n    if (slide + step < images.length - frameSize) {\n      setSlide(Math.min(slide + step, images.length - frameSize));\n    } else {\n      setSlide(images.length - frameSize);\n    }\n\n    if (slide === images.length - frameSize && infinite) {\n      setSlide(0);\n    }\n  };\n\n  const slidePrev = () => {\n    if (slide - step > 0) {\n      setSlide(Math.max(slide - step, 0));\n    } else {\n      setSlide(0);\n    }\n\n    if (infinite && !slide) {\n      setSlide(images.length - frameSize);\n    }\n  };\n\n  const disabledPrev = !infinite && !slide;\n  const disabledNext = !infinite && slide === images.length - frameSize;\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${frameSize * itemWidth}px`,\n        transition: `width ${animationDuration}ms`,\n      }}\n    >\n      <ul\n        className=\"Carousel__list\"\n      >\n        {images.map(image => (\n          <li\n            key={images.indexOf(image) + 1}\n            style={{\n              transform: `translateX(${-slide * itemWidth}px)`,\n              transition: `transform ${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={image}\n              alt={String(images.indexOf(image) + 1)}\n              width={itemWidth}\n              style={{\n                transition: `width ${animationDuration}ms`,\n              }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__button-wrapper\">\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          onClick={slidePrev}\n          disabled={disabledPrev}\n        >\n          Prev\n        </button>\n\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          onClick={slideNext}\n          disabled={disabledNext}\n          data-cy=\"next\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  setStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  setFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n  };\n\n  setImageWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  setAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  setInfinite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinite: event.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">Carousel</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <div className=\"inputs\">\n          <label htmlFor=\"stepId\">\n            Step:\n            <input\n              id=\"stepId\"\n              className=\"inputs__input\"\n              type=\"number\"\n              value={step}\n              min={1}\n              max={5}\n              step={1}\n              onChange={this.setStep}\n            />\n          </label>\n\n          <label htmlFor=\"frameId\">\n            Frame size:\n            <input\n              id=\"frameId\"\n              className=\"inputs__input\"\n              type=\"number\"\n              value={frameSize}\n              min={1}\n              max={10}\n              step={1}\n              onChange={this.setFrameSize}\n            />\n          </label>\n\n          <label htmlFor=\"itemId\">\n            Item width:\n            <input\n              id=\"itemId\"\n              className=\"input\"\n              type=\"number\"\n              value={itemWidth}\n              min={130}\n              max={260}\n              step={10}\n              onChange={this.setImageWidth}\n            />\n          </label>\n\n          <label htmlFor=\"animationDuration\">\n            Animation duration:\n            <input\n              id=\"animationDuration\"\n              className=\"inputs__input\"\n              type=\"number\"\n              value={animationDuration}\n              step={10}\n              onChange={this.setAnimationDuration}\n            />\n          </label>\n\n          <label htmlFor=\"infinite\">\n            Infinite:\n            <input\n              id=\"infinite\"\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={this.setInfinite}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}