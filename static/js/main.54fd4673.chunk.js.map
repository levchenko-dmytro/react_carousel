{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_ref","images","step","frameSize","itemWidth","animationDuration","infinite","newImages","map","image","index","imageUrl","imageId","_useState","useState","_useState2","_slicedToArray","slide","setSlide","disabledPrev","disabledNext","length","_jsxs","className","style","width","concat","transition","children","_jsx","_ref2","transform","src","alt","String","type","onClick","Math","max","disabled","min","App","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","state","minStep","maxStep","minFrameSize","maxFrameSize","minWidth","maxWidth","widthStep","animationDurationStep","setStep","event","setState","target","value","setFrameSize","setImageWidth","setAnimationDuration","setInfinite","checked","_createClass","key","_this$state","this","htmlFor","id","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gQA6GeA,EAjGmB,SAAHC,GAOxB,IANLC,EAAMD,EAANC,OACAC,EAAIF,EAAJE,KACAC,EAASH,EAATG,UACAC,EAASJ,EAATI,UACAC,EAAiBL,EAAjBK,kBACAC,EAAQN,EAARM,SAEMC,EAAYN,EAAOO,KAAI,SAACC,EAAOC,GAAK,MAAM,CAC9CC,SAAUF,EACVG,QAASF,EAAQ,EAClB,IAEDG,EAA0BC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAA9BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GA0BhBI,GAAgBb,IAAaW,EAC7BG,GAAgBd,GAAYW,IAAUV,EAAUc,OAASlB,EAE/D,OACEmB,eAAA,OACEC,UAAU,WACVC,MAAO,CACLC,MAAM,GAADC,OAAKvB,EAAYC,EAAS,MAC/BuB,WAAW,SAADD,OAAWrB,EAAiB,OACtCuB,SAAA,CAEFC,cAAA,MACEN,UAAU,iBAAgBK,SAEzBrB,EAAUC,KAAI,SAAAsB,GAAA,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAOkB,EAAPlB,QAAO,OACjCiB,cAAA,MAEEL,MAAO,CACLO,UAAU,cAADL,QAAiBT,EAAQb,EAAS,OAC3CuB,WAAW,aAADD,OAAerB,EAAiB,OAC1CuB,SAEFC,cAAA,OACEG,IAAKrB,EACLsB,IAAKC,OAAOtB,GACZa,MAAOrB,EACPoB,MAAO,CACLG,WAAW,SAADD,OAAWrB,EAAiB,UAXrCO,EAcF,MAITU,eAAA,OAAKC,UAAU,2BAA0BK,SAAA,CACvCC,cAAA,UACEN,UAAU,mBACVY,KAAK,SACLC,QAlDU,WAEdlB,EADED,EAAQf,EAAO,EACRmC,KAAKC,IAAIrB,EAAQf,EAAM,GAEvB,GAGPI,IAAaW,GACfC,EAASX,EAAUc,OAASlB,EAEhC,EAyCQoC,SAAUpB,EAAaS,SACxB,SAIDC,cAAA,UACEN,UAAU,mBACVY,KAAK,SACLC,QAvEU,WACZnB,EAAQf,EAAOK,EAAUc,OAASlB,EACpCe,EAASmB,KAAKG,IAAIvB,EAAQf,EAAMK,EAAUc,OAASlB,IAEnDe,EAASX,EAAUc,OAASlB,GAG1Bc,IAAUV,EAAUc,OAASlB,GAAaG,GAC5CY,EAAS,EAEb,EA8DQqB,SAAUnB,EACV,UAAQ,OAAMQ,SACf,cAMT,EC9FMa,EAAG,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAA5B,OAAA6B,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAuDL,OAvDKN,EAAAF,EAAAS,KAAAC,MAAAV,EAAA,OAAAlB,OAAAwB,KACPK,MAAQ,CACNtD,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFC,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,IACnBC,UAAU,GACXwC,EAEDU,QAAU,EAACV,EAEXW,QAAU,EAACX,EAEXY,aAAe,EAACZ,EAEhBa,aAAe,GAAEb,EAEjBc,SAAW,IAAGd,EAEde,SAAW,IAAGf,EAEdgB,UAAY,GAAEhB,EAEdiB,sBAAwB,GAAEjB,EAE1BkB,QAAU,SAACC,GACTnB,EAAKoB,SAAS,CAAEhE,MAAO+D,EAAME,OAAOC,OACtC,EAACtB,EAEDuB,aAAe,SAACJ,GACdnB,EAAKoB,SAAS,CAAE/D,WAAY8D,EAAME,OAAOC,OAC3C,EAACtB,EAEDwB,cAAgB,SAACL,GACfnB,EAAKoB,SAAS,CAAE9D,WAAY6D,EAAME,OAAOC,OAC3C,EAACtB,EAEDyB,qBAAuB,SAACN,GACtBnB,EAAKoB,SAAS,CAAE7D,mBAAoB4D,EAAME,OAAOC,OACnD,EAACtB,EAED0B,YAAc,SAACP,GACbnB,EAAKoB,SAAS,CAAE5D,SAAU2D,EAAME,OAAOM,SACzC,EAAC3B,CAAC,CA4FD,OA5FA4B,YAAAjC,EAAA,EAAAkC,IAAA,SAAAP,MAED,WACE,IAAAQ,EAOIC,KAAKtB,MANPtD,EAAM2E,EAAN3E,OACAC,EAAI0E,EAAJ1E,KACAC,EAASyE,EAATzE,UACAC,EAASwE,EAATxE,UACAC,EAAiBuE,EAAjBvE,kBACAC,EAAQsE,EAARtE,SAGF,OACEgB,eAAA,OAAKC,UAAU,MAAKK,SAAA,CAClBC,cAAA,MAAI,UAAQ,QAAOD,SAAC,aAEpBC,cAAC9B,EAAQ,CACPE,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBC,SAAUA,IAGZgB,eAAA,OAAKC,UAAU,SAAQK,SAAA,CACrBN,eAAA,SAAOwD,QAAQ,SAAQlD,SAAA,CAAC,QAEtBC,cAAA,SACEkD,GAAG,SACHxD,UAAU,gBACVY,KAAK,SACLiC,MAAOlE,EACPsC,IAAKqC,KAAKrB,QACVlB,IAAKuC,KAAKpB,QACVvD,KAAM2E,KAAKrB,QACXwB,SAAUH,KAAKb,aAInB1C,eAAA,SAAOwD,QAAQ,UAASlD,SAAA,CAAC,cAEvBC,cAAA,SACEkD,GAAG,UACHxD,UAAU,gBACVY,KAAK,SACLiC,MAAOjE,EACPqC,IAAKqC,KAAKnB,aACVpB,IAAKuC,KAAKlB,aACVzD,KAAM2E,KAAKrB,QACXwB,SAAUH,KAAKR,kBAInB/C,eAAA,SAAOwD,QAAQ,SAAQlD,SAAA,CAAC,cAEtBC,cAAA,SACEkD,GAAG,SACHxD,UAAU,QACVY,KAAK,SACLiC,MAAOhE,EACPoC,IAAKqC,KAAKjB,SACVtB,IAAKuC,KAAKhB,SACV3D,KAAM2E,KAAKf,UACXkB,SAAUH,KAAKP,mBAInBhD,eAAA,SAAOwD,QAAQ,oBAAmBlD,SAAA,CAAC,sBAEjCC,cAAA,SACEkD,GAAG,oBACHxD,UAAU,gBACVY,KAAK,SACLiC,MAAO/D,EACPH,KAAM2E,KAAKd,sBACXiB,SAAUH,KAAKN,0BAInBjD,eAAA,SAAOwD,QAAQ,WAAUlD,SAAA,CAAC,YAExBC,cAAA,SACEkD,GAAG,WACH5C,KAAK,WACLsC,QAASnE,EACT0E,SAAUH,KAAKL,sBAM3B,KAAC/B,CAAA,CAnJM,CAASwC,IAAMC,WAsJTzC,IChKf0C,IAASC,OAAOvD,cAACY,EAAG,IAAK4C,SAASC,eAAe,Q","file":"static/js/main.54fd4673.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const newImages = images.map((image, index) => ({\n    imageUrl: image,\n    imageId: index + 1,\n  }));\n\n  const [slide, setSlide] = useState(0);\n\n  const slideNext = () => {\n    if (slide + step < newImages.length - frameSize) {\n      setSlide(Math.min(slide + step, newImages.length - frameSize));\n    } else {\n      setSlide(newImages.length - frameSize);\n    }\n\n    if (slide === newImages.length - frameSize && infinite) {\n      setSlide(0);\n    }\n  };\n\n  const slidePrev = () => {\n    if (slide - step > 0) {\n      setSlide(Math.max(slide - step, 0));\n    } else {\n      setSlide(0);\n    }\n\n    if (infinite && !slide) {\n      setSlide(newImages.length - frameSize);\n    }\n  };\n\n  const disabledPrev = !infinite && !slide;\n  const disabledNext = !infinite && slide === newImages.length - frameSize;\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${frameSize * itemWidth}px`,\n        transition: `width ${animationDuration}ms`,\n      }}\n    >\n      <ul\n        className=\"Carousel__list\"\n      >\n        {newImages.map(({ imageUrl, imageId }) => (\n          <li\n            key={imageId}\n            style={{\n              transform: `translateX(${-slide * itemWidth}px)`,\n              transition: `transform ${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={imageUrl}\n              alt={String(imageId)}\n              width={itemWidth}\n              style={{\n                transition: `width ${animationDuration}ms`,\n              }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__button-wrapper\">\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          onClick={slidePrev}\n          disabled={disabledPrev}\n        >\n          Prev\n        </button>\n\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          onClick={slideNext}\n          disabled={disabledNext}\n          data-cy=\"next\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  minStep = 1;\n\n  maxStep = 5;\n\n  minFrameSize = 1;\n\n  maxFrameSize = 10;\n\n  minWidth = 130;\n\n  maxWidth = 260;\n\n  widthStep = 10;\n\n  animationDurationStep = 10;\n\n  setStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  setFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n  };\n\n  setImageWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  setAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  setInfinite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinite: event.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">Carousel</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <div className=\"inputs\">\n          <label htmlFor=\"stepId\">\n            Step:\n            <input\n              id=\"stepId\"\n              className=\"inputs__input\"\n              type=\"number\"\n              value={step}\n              min={this.minStep}\n              max={this.maxStep}\n              step={this.minStep}\n              onChange={this.setStep}\n            />\n          </label>\n\n          <label htmlFor=\"frameId\">\n            Frame size:\n            <input\n              id=\"frameId\"\n              className=\"inputs__input\"\n              type=\"number\"\n              value={frameSize}\n              min={this.minFrameSize}\n              max={this.maxFrameSize}\n              step={this.minStep}\n              onChange={this.setFrameSize}\n            />\n          </label>\n\n          <label htmlFor=\"itemId\">\n            Item width:\n            <input\n              id=\"itemId\"\n              className=\"input\"\n              type=\"number\"\n              value={itemWidth}\n              min={this.minWidth}\n              max={this.maxWidth}\n              step={this.widthStep}\n              onChange={this.setImageWidth}\n            />\n          </label>\n\n          <label htmlFor=\"animationDuration\">\n            Animation duration:\n            <input\n              id=\"animationDuration\"\n              className=\"inputs__input\"\n              type=\"number\"\n              value={animationDuration}\n              step={this.animationDurationStep}\n              onChange={this.setAnimationDuration}\n            />\n          </label>\n\n          <label htmlFor=\"infinite\">\n            Infinite:\n            <input\n              id=\"infinite\"\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={this.setInfinite}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}