{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_ref","images","step","frameSize","itemWidth","animationDuration","infinite","_useState","useState","_useState2","_slicedToArray","slide","setSlide","_jsxs","className","style","maxWidth","concat","children","_jsx","transform","transition","map","image","src","alt","String","indexOf","width","type","onClick","Math","max","length","min","App","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","state","setStep","event","setState","target","value","setFrameSize","setImageWidth","setAnimationDuration","setInfinite","checked","_createClass","key","_this$state","this","htmlFor","id","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccee4dea.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [slide, setSlide] = useState(0);\n  const slideNext = () => {\n    if (slide + step < images.length - frameSize) {\n      setSlide(Math.min(slide + step, images.length - frameSize));\n    } else {\n      setSlide(images.length - frameSize);\n    }\n\n    if (slide === images.length - frameSize && infinite) {\n      setSlide(0);\n    }\n  };\n\n  const slidePrev = () => {\n    if (slide - step > 0) {\n      setSlide(Math.max(slide - step, 0));\n    } else {\n      setSlide(0);\n    }\n\n    if (infinite && !slide) {\n      setSlide(images.length - frameSize);\n    }\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{ maxWidth: `${frameSize * +itemWidth}px` }}\n    >\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          transform: `translateX(${-slide * itemWidth}px)`,\n          transition: `transform ${animationDuration}ms`,\n        }}\n      >\n        {images.map(image => (\n          <li key={images.indexOf(image) + 1}>\n            <img\n              src={image}\n              alt={String(images.indexOf(image) + 1)}\n              style={{ width: `${itemWidth}px` }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"button-wrapper\">\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={slidePrev}\n        >\n          Prev\n        </button>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={slideNext}\n          data-cy=\"next\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  setStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  setFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n  };\n\n  setImageWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  setAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  setInfinite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinite: event.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">Carousel</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <div className=\"input-container\">\n          <label htmlFor=\"step\">\n            Step:\n            <input\n              id=\"step\"\n              className=\"input\"\n              type=\"number\"\n              value={step}\n              min={1}\n              max={5}\n              step={1}\n              onChange={this.setStep}\n            />\n          </label>\n\n          <label htmlFor=\"frameSize\">\n            Frame size:\n            <input\n              id=\"frameSize\"\n              className=\"input\"\n              type=\"number\"\n              value={frameSize}\n              min={1}\n              max={10}\n              step={1}\n              onChange={this.setFrameSize}\n            />\n          </label>\n\n          <label htmlFor=\"itemWidth\">\n            Item width:\n            <input\n              id=\"itemWidth\"\n              className=\"input\"\n              type=\"number\"\n              value={itemWidth}\n              min={130}\n              max={260}\n              step={10}\n              onChange={this.setImageWidth}\n            />\n          </label>\n\n          <label htmlFor=\"animationDuration\">\n            Animation duration:\n            <input\n              id=\"animationDuration\"\n              className=\"input\"\n              type=\"number\"\n              value={animationDuration}\n              step={10}\n              onChange={this.setAnimationDuration}\n            />\n          </label>\n\n          <label htmlFor=\"infinite\">\n            Infinite:\n            <input\n              id=\"infinite\"\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={this.setInfinite}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}